# Generated by Django 4.1.1 on 2022-10-06 18:01

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mainwebsite.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('pages', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(max_length=200, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=14, null=True)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HistroyAbstract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_id', models.CharField(blank=True, max_length=100, null=True)),
                ('trans_type', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.FloatField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_type', models.CharField(blank=True, choices=[('Monday Special', 'Monday Special'), ('Lucky Tuesday', 'Lucky Tuesday'), ('Lucky Wednesday', 'Lucky Tuesday'), ('Lucky Thursday', 'Lucky Tuesday'), ('Lucky Friday', 'Lucky Tuesday')], max_length=100, null=True)),
                ('perm_type', models.CharField(blank=True, choices=[('2 Direct ', '2 Direct'), ('3 Direct', '3 Direct'), ('Perm 2', 'Perm 2'), ('Perm 3', 'Perm 3')], max_length=100, null=True)),
                ('first_number', models.PositiveIntegerField(blank=True, default='', null=True, validators=[mainwebsite.models.less_than])),
                ('second_number', models.PositiveIntegerField(blank=True, default='', null=True, validators=[mainwebsite.models.less_than])),
                ('third_number', models.PositiveIntegerField(blank=True, default='', null=True, validators=[mainwebsite.models.less_than])),
                ('fourth_number', models.PositiveIntegerField(blank=True, default='', null=True, validators=[mainwebsite.models.less_than])),
                ('fifth_number', models.PositiveIntegerField(blank=True, default='', null=True, validators=[mainwebsite.models.less_than])),
                ('price', models.FloatField(blank=True, max_length=100, null=True)),
                ('winning_amount', models.FloatField(blank=True, max_length=100, null=True)),
                ('payment', models.FloatField(blank=True, max_length=100, null=True)),
                ('date_stake', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DepositHistory',
            fields=[
                ('histroyabstract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainwebsite.histroyabstract')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            bases=('mainwebsite.histroyabstract',),
        ),
        migrations.CreateModel(
            name='TransactionHistory',
            fields=[
                ('histroyabstract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainwebsite.histroyabstract')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            bases=('mainwebsite.histroyabstract',),
        ),
        migrations.CreateModel(
            name='withdrawHistory',
            fields=[
                ('histroyabstract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mainwebsite.histroyabstract')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            bases=('mainwebsite.histroyabstract',),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(max_length=200, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=14, null=True)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('avatar', models.ImageField(blank=True, default='mediaflies/avatar.png', null=True, upload_to='')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForecasterPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('draw_type', models.CharField(blank=True, choices=[('Monday Special', 'Monday Special'), ('Lucky Tuesday', 'Lucky Tuesday'), ('Mid Week', 'Mid Week'), ('Fortune Thursday', 'Fortune Thursday'), ('Friday Bonaza', 'Friday Bonaza'), ('National Weekly Lotto', 'National Weekly Lotto'), ('Sunday Aseda', 'Sunday Aseda')], default='', max_length=100, null=True)),
                ('date_select', models.CharField(default='', max_length=50)),
                ('first_number', models.PositiveIntegerField(blank=True, default='', null=True, validators=[mainwebsite.models.less_than])),
                ('second_number', models.PositiveIntegerField(blank=True, default='', null=True, validators=[mainwebsite.models.less_than])),
                ('third_number', models.PositiveIntegerField(blank=True, default='', null=True, validators=[mainwebsite.models.less_than])),
                ('fourth_number', models.PositiveIntegerField(blank=True, default='', null=True, validators=[mainwebsite.models.less_than])),
                ('fifth_number', models.PositiveIntegerField(blank=True, default='', validators=[mainwebsite.models.less_than])),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('win_draw', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='pages.addwindraw')),
            ],
        ),
    ]
